library(tidyverse)
tt <- tt_load("2020-12-22")
View(big_mac)
big_mac <- tt$`big-mac`
tt <- tt_load("2020-12-22")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
install.packages("tidytuesdayR")
?install.packages()
install.packages("tidytuesdayR", dependencies=TRUE)
install.packages("remotes")
remotes::install_github("thebioengineer/tidytuesdayR")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
install.packages("tidytuesdayR")
install.packages("usethis")
install.packages("gert")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
# Chunk 2: Load
tt <- tt_load("2020-12-22")
#tt # prints the meta on the viewer for the variable descritptions
# Chunk 3
big_mac <- tt$`big-mac`
View(big_mac)
# Chunk 4
big_mac %>%
ggplot(aes(date, local_price, color=name)) +
geom_line()
# Chunk 5
big_mac <- big_mac %>%
rename(country = name) %>%
add_count(country, name = "country_total") %>%
filter(country_total == max(country_total)) %>%
arrange(country, date)
# Chunk 6
big_mac %>%
ggplot(aes(date, local_price, color=country)) +
geom_line() +
expand_limits(y = 0)+
facet_wrap(~country, scales = "free_y") +
theme(legend.position = "none") +
labs(x = "Time", y = "Price in local currency")
# Chunk 7
# sorting by country who didn't go through inflation and those who did
big_mac %>%
mutate(country = fct_reorder(country, local_price, function(.) last(.) / first(.))) %>%
ggplot(aes(date, local_price, color=country)) +
geom_line() +
expand_limits(y = 0)+
facet_wrap(~country, scales = "free_y") +
theme(legend.position = "none") +
labs(x = "Time", y = "Price in local currency")
# Chunk 8
big_mac %>%
group_by(country) %>%
summarize(big_mac_inflation = last(local_price)/first(local_price)) %>%
arrange(desc(big_mac_inflation))%>%
mutate(country = fct_reorder(country, big_mac_inflation)) %>%
ggplot(aes(big_mac_inflation, country))+
geom_col()
# Chunk 9
big_mac %>%
group_by(country) %>%
summarise(big_mac_inflation = last(local_price)/first(local_price)) %>%
arrange(desc(big_mac_inflation))%>%
mutate(country = fct_reorder(country, big_mac_inflation)) %>%
ggplot(aes(big_mac_inflation, country, fill=country))+
geom_col() +
geom_text(aes(label=paste0(round(big_mac_inflation, 1), "X")), hjust=0)+
expand_limits(x = 130) +
scale_x_log10(breaks = c(1, 3, 10, 30, 100)) +
theme(legend.position = "none")+
labs(x = "Price of Big Mac in 2020 / Price of Big Mac 2000", y = "")
# Chunk 10
big_mac %>%
group_by(date) %>%
mutate(usd_price = local_price[iso_a3 == "USA"], # The count of unique date is 33, which is the size of big_mac$local_price[big_mac$iso_a3 == "USA"]
us_gdp = gdp_dollar[iso_a3 == "USA"]) %>%
mutate(big_mac_ex = local_price / usd_price) %>%
ungroup() %>% # same effect even if we don't put this line of code
select(date, iso_a3, country, local_price, dollar_ex, usd_price, big_mac_ex, usd_raw, gdp_dollar, us_gdp, usd_adjusted) %>%
mutate(usd_recalculated = (big_mac_ex - dollar_ex)/dollar_ex)%>%
View()
#filter(!is.na(gdp_dollar))
# Chunk 11
big_mac %>%
select(date, country, local_price, dollar_ex, usd_raw, gdp_dollar, usd_adjusted) %>%
filter(!is.na(gdp_dollar)) %>%
mutate(country = fct_reorder(country, usd_raw)) %>%
ggplot(aes(date, usd_raw)) +
geom_line()+
geom_hline(color = "red", lty=2, yintercept = 0)+
expand_limits(y=0) +
facet_wrap(~ country) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(y= "Raw Big Max Index relative to USD", x = "")
# Chunk 12
big_mac %>%
select(date, country, local_price, dollar_ex, usd_raw, gdp_dollar, usd_adjusted) %>%
filter(!is.na(gdp_dollar)) %>%
mutate(country = fct_reorder(country, usd_raw)) %>%
ggplot(aes(date, usd_adjusted)) +
geom_line()+
geom_hline(color = "red", lty=2, yintercept = 0)+
expand_limits(y=0) +
facet_wrap(~ country) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(y= "Raw Big Max Index relative to USD", x = "")
# Chunk 13
big_mac %>%
group_by(date) %>%
mutate(usd_price = local_price[iso_a3 == "USA"],
us_gdp = gdp_dollar[iso_a3 == "USA"]) %>%
mutate(big_mac_ex = local_price / usd_price) %>%
ungroup() %>%
filter(country == "Argentina", !is.na(gdp_dollar)) %>%
mutate(price_from_usd = usd_price * dollar_ex) %>%
ggplot(aes(date, local_price)) +
geom_line(aes(color = "Price (in local currency)")) +
geom_line(aes(y=price_from_usd, color = "Price from USD"))
# Chunk 14
library(ggrepel)
big_mac %>%
filter(date == max(date)) %>%
ggplot(aes(gdp_dollar, usd_raw)) +
geom_point()+
geom_smooth(method = "lm")+
#geom_text(aes(label=country), vjust = 1, hjust=1)
geom_text_repel(aes(label=country)) +
labs(y= "Raw Big Max Index relative to USD", x = "GDP per capita (dollars)")
# Chunk 15
library(ggrepel)
big_mac %>%
filter(date == max(date)) %>%
ggplot(aes(gdp_dollar, usd_adjusted)) +
geom_point()+
geom_smooth(method = "lm")+
#geom_text(aes(label=country), vjust = 1, hjust=1)
geom_text_repel(aes(label=country)) +
labs(y= "Adjusted Big Max Index relative to USD", x = "GDP per capita (dollars)")
# Chunk 16
library(gganimate)
require(transformr)
big_mac %>%
filter(!is.na(gdp_dollar)) %>%
ggplot(aes(gdp_dollar, usd_adjusted)) +
geom_point()+
geom_smooth(method = "lm")+
#geom_text(aes(label=country), vjust = 1, hjust=1)
geom_text_repel(aes(label=country)) +
transition_time(date) + # transition_manual
labs(y= "Adjusted Big Max Index relative to USD", x = "GDP per capita (dollars)",
title = "{ frame_time }") # title = "{ current_frame }"
# Chunk 17
big_mac %>%
filter(date == max(date)) %>%
mutate(country=fct_reorder(country, usd_adjusted)) %>%
ggplot(aes(usd_adjusted, country)) +
geom_col() +
labs(x="Big Mac Index (GDP-adjusted", y = "")
# Chunk 18
big_mac %>%
filter(!is.na(gdp_dollar)) %>%
ggplot(aes(gdp_dollar, usd_adjusted)) +
geom_point()+
geom_smooth(method = "lm")+
#geom_text(aes(label=country), vjust = 1, hjust=1)
geom_text_repel(aes(label=country)) +
transition_time(date) + # transition_manual
labs(y= "Adjusted Big Max Index relative to USD", x = "GDP per capita (dollars)",
title = "{ frame_time }") # title = "{ current_frame }"
big_mac %>%
filter(!is.na(gdp_dollar)) %>%
ggplot(aes(gdp_dollar, usd_adjusted)) +
geom_point()+
geom_smooth(method = "lm")+
#geom_text(aes(label=country), vjust = 1, hjust=1)
geom_text_repel(aes(label=country)) +
transition_time(date) + # transition_manual
labs(y= "Adjusted Big Max Index relative to USD", x = "GDP per capita (dollars)",
title = "{ frame_time }") # title = "{ current_frame }"
